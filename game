from random import randint

import cocos.collision_model as cm
import cocos.euclid as eu
import pyglet
from cocos.actions import MoveBy, CallFunc, Repeat, Delay
from cocos.director import director
from cocos.layer import Layer
from cocos.scene import Scene
from cocos.sprite import Sprite

BUTTON_LEFT = 0x00000001
BUTTON_MIDDLE = 0x00000002
BUTTON_RIGHT = 0x00000004

Z_Plane = 3
Z_Bullet = 2
Z_Background = 1

WIDTH = 480
HEIGHT = 800


class Bullet(Layer):
    is_event_handler = True

    def __init__(self, position, rotation):
        super(Bullet, self).__init__()
        image = pyglet.resource.image('bullet_205px_1235397_easyicon.net.png')
        self.sprite = Sprite(image, position, rotation, 0.03)
        self.add(self.sprite)
        length = HEIGHT - position[1]
        speed = 420 / 1
        action = MoveBy((0, length), duration=length / speed)

        def stop():
            main_scene.remove(self)

        action.stop = stop
        self.sprite.do(action)


class Plan(Layer):

    def __init__(self, parent, image, position=(0, 0), rotation=0, scale=1.0):
        super(Plan, self).__init__()
        self.parent = parent
        self.sprite = Sprite(image, position, rotation, scale)
        self.add(self.sprite)

    def move(self, x, y):
        self.position = (x, self.position[1])

    def fire(self, x, y):
        self.parent.add(Bullet([x - 26, y + 18], self.rotation), z=Z_Bullet)
        self.parent.add(Bullet([x - 16, y + 25], self.rotation), z=Z_Bullet)
        self.parent.add(Bullet([x + 16, y + 25], self.rotation), z=Z_Bullet)
        self.parent.add(Bullet([x + 26, y + 18], self.rotation), z=Z_Bullet)


class Enemy(Plan):
    def __init__(self, parent, position=(0, 0)):
        super(Enemy, self).__init__(parent, 'airplane_625px_1234720_easyicon.net.png', position, 180, 0.1)

        # 移动行为
        action = MoveBy((0, -HEIGHT), duration=3)

        # 移动行为结束动作
        def stop():
            main_scene.remove(self)

        # 绑定结束动作到移动行为
        action.stop = stop
        # 开始执行移动行为
        self.do(action)

        # 碰撞
        center_x, center_y = self.position
        self.cshape = cm.AARectShape(eu.Vector2(self.anchor_x, self.anchor_y), self.anchor_x, self.anchor_y)

    def bomb(self, x, y):
        return


class Oneself(Plan):
    # 开启事件处理
    is_event_handler = True

    def __init__(self, parent):
        super(Oneself, self).__init__(parent, 'airplane_710px_1219057_easyicon.net.png', scale=0.1)
        self.position = (WIDTH / 2, 0 + 100)

        # self.cshape = cm.AARectShape(eu.Vector2(self.anchor_x, self.anchor_y), self.anchor_x, self.anchor_y)
        def fire():
            self.fire(*self.position)

        # 定义动作 生成敌人+延时0.5秒
        action = Delay(0.3) + CallFunc(fire)
        # 重复运行动作
        self.do(Repeat(action))

    def on_mouse_motion(self, x, y, dx, dy):
        self.move(*director.get_virtual_coordinates(x, y))

    def on_mouse_drag(self, x, y, dx, dy, buttons, modifiers):
        self.move(*director.get_virtual_coordinates(x, y))


class Background(Layer):
    def __init__(self, parent):
        super(Layer, self).__init__()
        # 添加战机
        parent.add(Oneself(parent), z=Z_Plane)

        # 生成敌人
        def make_enemy():
            parent.add(Enemy(parent, (randint(24, WIDTH - 24), HEIGHT)), z=Z_Plane)

        # 定义动作 生成敌人+延时1秒
        action = CallFunc(make_enemy) + Delay(1)
        # 重复运行动作
        self.do(Repeat(action))


director.init(width=WIDTH, height=HEIGHT)
# 定义主场景
main_scene = Scene()
# 向主场景添加元素
main_scene.add(Background(main_scene), z=Z_Background)
# 运行主场景
director.run(main_scene)
